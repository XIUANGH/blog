name: Deploy Hugo site to Pages

on:
  workflow_dispatch:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.134.2
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Init Hugo Site
        run: |
          # ÂàõÂª∫ Hugo Á´ôÁÇπÈÖçÁΩÆ
          cat > config.toml <<EOL
          baseURL = 'https://XIUANGH.github.io/blog/'
          # ÂêéÁª≠Â¶ÇÊûúË¶ÅËá™ÂÆö‰πâÂüüÂêçÈúÄË¶ÅÊîπ‰∏∫baseURL = 'https://example.com/'
          languageCode = 'zh-cn'
          title = 'Articles'
          theme = 'paper'


          [markup]
            [markup.goldmark]
              [markup.goldmark.extensions]
                [markup.goldmark.extensions.passthrough]
                  enable = true
                  [markup.goldmark.extensions.passthrough.delimiters]
                    block = [['\[', '\]'], ['$$', '$$']]
                    inline = [['\(', '\)']]

          [params]
            github = 'XIUANGH'
            rss = true
            color = 'linen'
            math = true
          
          [taxonomies]
            category = 'categories'
            tag = 'tags'
            
          [markup.goldmark.renderer]
            unsafe = true
          EOL
          
          # ‰∏ãËΩΩÂπ∂ËÆæÁΩÆ‰∏ªÈ¢ò
          git clone https://github.com/nanxiaobei/hugo-paper themes/paper
          
          # ÂàõÂª∫Ëá™ÂÆö‰πâ‰∏ªÈ°µÊ®°Êùø
          mkdir -p layouts
          cat > layouts/index.html <<EOL
          {{ define "main" }}
          <article class="post-single">
            <div class="post-content">
              <!-- ÊåâÊñá‰ª∂Â§πÁªìÊûÑÊòæÁ§∫ÊñáÁ´† -->
              {{ \$pages := .Site.RegularPages }}
              {{ \$sections := slice }}
              {{ range \$pages }}
                {{ \$section := path.Dir .File.Path }}
                {{ if and (ne \$section ".") (ne \$section "posts") }}
                  {{ if not (in \$sections \$section) }}
                    {{ \$sections = \$sections | append \$section }}
                  {{ end }}
                {{ end }}
              {{ end }}
              
              <!-- È¶ñÂÖàÊòæÁ§∫Ê†πÁõÆÂΩïÊñáÁ´† -->
              {{ \$rootPages := where \$pages "File.Dir" "posts/" }}
              {{ if \$rootPages }}
              <div class="folder">
                <ul>
                  {{ range sort \$rootPages "Title" }}
                    <li>
                      <a href="{{ .Permalink }}">{{ .Title }}</a>
                    </li>
                  {{ end }}
                </ul>
              </div>
              {{ end }}
              
              <!-- ÁÑ∂ÂêéÊòæÁ§∫ÂÖ∂‰ªñÊñá‰ª∂Â§π -->
              {{ range sort \$sections }}
                {{ \$section := . }}
                <div class="folder">
                  <h3>üìÅ {{ . }}</h3>
                  <ul>
                    {{ range sort (\$pages.ByTitle) }}
                      {{ if eq (path.Dir .File.Path) \$section }}
                        <li>
                          <a href="{{ .Permalink }}">{{ .Title }}</a>
                        </li>
                      {{ end }}
                    {{ end }}
                  </ul>
                </div>
              {{ end }}
            </div>
          </article>
          
          <style>
          .folder {
            margin-bottom: 1.5rem;
            border-radius: var(--radius);
            background: var(--secondary);
          }
          .folder h3 {
            margin: 0;
            padding: 1rem;
            font-size: 1.1rem;
            border-bottom: 1px solid var(--border);
          }
          .folder ul {
            list-style: none;
            padding: 1rem;
            margin: 0;
          }
          .folder li {
            margin: 0.5rem 0;
          }
          .folder li a {
            text-decoration: none;
            color: var(--primary);
          }
          .folder li a:hover {
            text-decoration: underline;
          }
          </style>
          {{ end }}
          EOL

          mkdir -p layouts/partials

          # Ê£ÄÊü•Êñá‰ª∂ÊòØÂê¶Â≠òÂú®
          if [ ! -f layouts/partials/math.html ]; then
            # Â¶ÇÊûúÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàôÂÜôÂÖ•Êñ∞ÁöÑÂÜÖÂÆπ
            echo "file not exist"
            cat > layouts/partials/math.html <<EOL
          <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>
          <script>
            MathJax = {
              tex: {
                displayMath: [['\\[', '\\]'], ['$$', '$$']],  // block
                inlineMath: [['\\(', '\\)']]                  // inline
              }
            };
          </script>
          EOL
          else
            # Â¶ÇÊûúÊñá‰ª∂Â≠òÂú®ÔºåÂàôËøΩÂä†ÂÜÖÂÆπ
            cat >> layouts/partials/math.html <<EOL

          <!-- ËøΩÂä†ÁöÑ MathJax ÈÖçÁΩÆ -->
          <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>
          <script>
            MathJax = {
              tex: {
                displayMath: [['\\[', '\\]'], ['$$', '$$']],  // block
                inlineMath: [['\\(', '\\)']]                  // inline
              }
            };
          </script>
          EOL
          fi

          mkdir -p layouts/_default

          # Ê£ÄÊü•Êñá‰ª∂ÊòØÂê¶Â≠òÂú®
          if [ ! -f layouts/_default/baseof.html ]; then
            # Â¶ÇÊûúÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàôÂàõÂª∫Âπ∂ÂÜôÂÖ•ÂÜÖÂÆπ
            echo "no baseof file"
            cat > layouts/_default/baseof.html <<EOL
            <!DOCTYPE html>
            <html>
              <head>
              {{ if .Param "math" }}
                {{ partialCached "math.html" . }}
              {{ end }}
              </head>
               
              <body>
                  {{- partial "header.html" . -}}
                  <div id="content">
                  {{- block "main" . }}{{- end }}
                  </div>
                  {{- partial "footer.html" . -}}
              </body>
            </html>
          
          EOL
          else
            # Â¶ÇÊûúÊñá‰ª∂Â≠òÂú®ÔºåÂàôÊèíÂÖ•ÂÜÖÂÆπÂà∞ <head> Âíå </head> Ê†áÁ≠æ‰πãÈó¥
            temp_file=$(mktemp)  # ÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂Êñá‰ª∂
            awk '
              BEGIN { inside_head = 0 }
              /<head>/ { print; inside_head = 1; next }
              /<\/head>/ && inside_head {
                print "  {{ if .Param \"math\" }}\n    {{ partialCached \"math.html\" . }}\n  {{ end }}";
                inside_head = 0;
              }
              { print }
            ' layouts/_default/baseof.html > "$temp_file"
            mv "$temp_file" layouts/_default/baseof.html  # ÊõøÊç¢ÂéüÊñá‰ª∂
          fi


          # ÂàõÂª∫ÂÜÖÂÆπÁõÆÂΩïÁªìÊûÑ
          mkdir -p content
          
          # ÁßªÂä®Âπ∂ÁªÑÁªá Markdown Êñá‰ª∂
          find . -name "*.md" -not -path "./themes/*" -not -path "./archetypes/*" -not -path "./content/*" -not -path "./layouts/*" | while read file; do
            # Ëé∑ÂèñÁõ∏ÂØπË∑ØÂæÑ
            rel_path=${file#./}
            dir_path=$(dirname "$rel_path")
            
            # Â¶ÇÊûú‰∏çÊòØÂú®Ê†πÁõÆÂΩïÔºåÂàõÂª∫ÂØπÂ∫îÁöÑÂÜÖÂÆπÁõÆÂΩï
            if [ "$dir_path" != "." ]; then
              mkdir -p "content/$dir_path"
              target_path="content/$rel_path"
            else
              target_path="content/posts/$(basename "$rel_path")"
            fi
            
            # ÁßªÂä®Êñá‰ª∂Âπ∂Ê∑ªÂä†/Êõ¥Êñ∞ÂâçÁΩÆÊï∞ÊçÆ
            if [ -f "$file" ]; then
              title=$(basename "$file" .md)
              date=$(git log -1 --format=%aI -- "$file")
              lastmod=$(git log -1 --format=%aI -- "$file")
              
              # Â¶ÇÊûúÊñá‰ª∂Ê≤°Êúâ front matterÔºåÊ∑ªÂä†ÂÆÉ
              if ! grep -q "^---" "$file"; then
                temp_file=$(mktemp)
                echo "---" > "$temp_file"
                echo "title: \"$title\"" >> "$temp_file"
                echo "date: $date" >> "$temp_file"
                echo "lastmod: $lastmod" >> "$temp_file"
                echo "---" >> "$temp_file"
                cat "$file" >> "$temp_file"
                mkdir -p $(dirname "$target_path")
                mv "$temp_file" "$target_path"
              else
                mkdir -p $(dirname "$target_path")
                mv "$file" "$target_path"
              fi
            fi
          done

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --gc --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4